% Sun Nov 23 10:54:30 CET 2014
% Karl Kastner, Berlin

function [shp obj] = export_shp(obj)
	% only export valid (already processed samples)
%	fdx = obj.valid();
	fdx = (1:length(obj.X))';
	timeV = str2num(datestr(obj.time,'yyyymmddHHMM'));
	% bend distinction (two-split)
	% actually they are mutually exclusive, but here different bits are used for simplicty
%	cuid(obj.cugroup(2).g(1).g(1).id) = {'inner'};
%	cuid(obj.cugroup(2).g(1).g(2).id) = {'outer'};
%	cuid(obj.cugroup(2).g(2).id)      = {'straight'};
	shp = Shp.create( ...
		'Geometry',    'Point' ...
		,'X',          obj.X(fdx) ...
		,'Y',          obj.Y(fdx) ...
		,'index',      obj.index(fdx) ...
... %		,'channel',    obj.channel.name(fdx) ...
... %		,'channel',     {obj.channel.group(obj.channel.id(fdx)).name} ...
		,'channel_id', obj.channel.id(fdx) ...
... %		,'channel_id2', obj.channel.id2(fdx) ...
... %		,'hist_group', obj.hgroup(3).id ...
... %		,'bend_type',  cuid(fdx) ...
		,'time',       timeV(fdx) ...
... %		,'S',          obj.S(fdx) ...
		,'N',          obj.N(fdx) ...
...		,'Rc',         obj.Rc(fdx) ...
...		,'width',      obj.width(fdx) ...
... %		,'S_downstream', obj.channel.S(fdx) ...
		,'S_sanggau',   obj.S_sanggau(fdx) ...
... %		,'snrel',      obj.snrel(fdx) ...
		,'mean',       obj.mu(fdx) ...
		,'std',        obj.std(fdx) ...
		,'skew',       obj.skew(fdx) ...
		,'kurt',       obj.kurt(fdx) ...
		,'mode',       obj.mo(fdx) ...
		,'serr_mu',    obj.serr(fdx) ...
		,'d16',        obj.d16(fdx) ...
		,'d50',        obj.me(fdx) ...
		,'d84',        obj.d84(fdx) ...
		,'gravel',     obj.gravel(fdx) ...
	...	,'entropy',    obj.entropy(fdx) ... 
	...	,'bimodality', obj.bimode.D(fdx) ...
	...	,'detph',      obj.depth(fdx) ...
...		,'area',       obj.area(fdx) ...
		);
end % export_shp

